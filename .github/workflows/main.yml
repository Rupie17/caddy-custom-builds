# Workflow to build and push a Docker image to Docker Hub, GitHub and Quay Container Registries
name: Build and publish

# Controls when the action will run
on:
  workflow_dispatch:  # allows to run the workflow manually from the Actions tab
  push:
    branches: main
    paths:
      - Dockerfile

# Environment variables
env:
  DOCKER_BUILDKIT: 1

# Jobs to run once the workflow is triggered
jobs:
  # Job to get image and repository details
  metadata:
    name: Get image and repository details
    runs-on: ubuntu-latest

    outputs:
      name: ${{ steps.name.outputs.name }}
      title: ${{ steps.title.outputs.title }}
      version: ${{ steps.version.outputs.version }}
      labels: ${{ steps.metadata.outputs.labels }}
      tags: ${{ steps.metadata.outputs.tags }}
      platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Generate docker-compliant image name
        id: name
        run: echo "name=$(echo ${GITHUB_REPOSITORY,,})" | tee -a $GITHUB_OUTPUT

      - name: Generate OCI image title
        id: title
        run: echo "title=$(echo ${GITHUB_REPOSITORY#*/})" | tee -a $GITHUB_OUTPUT

      - name: Parse Caddy version
        id: version
        run: echo "version=$(grep -Eo 'caddy:[0-9]+\.[0-9]+\.[0-9]+$' Dockerfile | cut -d ':' -f2)" | tee -a $GITHUB_OUTPUT

      - name: Generate image metadata with Caddy version
        uses: docker/metadata-action@v4
        id: metadata
        with:
          images: |
            docker.io/${{ steps.name.outputs.name }}
            ghcr.io/${{ steps.name.outputs.name }}
            quay.io/${{ steps.name.outputs.name }}
          tags: |
            type=semver,pattern={{version}},value=v${{ steps.version.outputs.version }}
            type=semver,pattern={{major}}.{{minor}},value=v${{ steps.version.outputs.version }}
            type=semver,pattern={{major}},value=v${{ steps.version.outputs.version }}
          labels: |
            org.opencontainers.image.title=${{ steps.title.outputs.title }}

  # Job to build and publish Docker image
  build:
    name: Build and publish Docker image
    runs-on: ubuntu-latest
    needs: metadata

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Repository
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Login to Quay Container Registry
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_ROBOTNAME }}
          password: ${{ secrets.QUAY_TOKEN }}

      - name: Build and publish container image
        uses: docker/build-push-action@v4
        id: build
        with:
          context: .
          push: true
          provenance: false
          tags: ${{ needs.metadata.outputs.tags }}
          labels: ${{ needs.metadata.outputs.labels }}
          platforms: ${{ needs.metadata.outputs.platforms }}

  # Job to create a release and a version tag
  release:
    name: Create release and version tag
    runs-on: ubuntu-latest
    needs: metadata

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Push release to github repository including tag
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.metadata.outputs.version }}
          body: |
            **Release notes:** https://github.com/caddyserver/caddy/releases/tag/v${{ needs.metadata.outputs.version }}